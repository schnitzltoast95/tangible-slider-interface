<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Button-Style -->
    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="Transparent" 
                            BorderThickness="0" 
                            Height="30"
                            CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <!-- RadioButtons -->
    <Style TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        <Grid Width="24" Height="24" Margin="5,0,10,0" VerticalAlignment="Center">
                            <Ellipse Fill="Transparent" Stroke="#EAAE05" StrokeThickness="3"/>
                            <Ellipse Fill="#EAAE05" Width="12" Height="12" Visibility="Hidden" x:Name="InnerEllipse"/>
                        </Grid>
                        <ContentPresenter VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="InnerEllipse" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Slider Style -->
    <Style TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <!-- Background -->
                        <Border Background="#D0C5B4" Height="6" CornerRadius="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                        <!-- Vibration zones -->
                        <Canvas Name="ZonesCanvas" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="6">
                            <!-- dynamic Zones -->
                        </Canvas>

                        <!-- Track -->
                        <Track Name="PART_Track" VerticalAlignment="Center">
                            <Track.Thumb>
                                <Thumb Width="20" Height="20">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Fill="#EAAE05" StrokeThickness="0" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Style -->
    <SolidColorBrush x:Key="Schemes/SecondaryContainer" Color="#F2E0C0" />
    <SolidColorBrush x:Key="Schemes/Secondary" Color="#6A5D3F" />

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>
    
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{StaticResource Schemes/Secondary}" BorderThickness="0"  Width="8"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="4" Width="8" Background="{StaticResource Schemes/SecondaryContainer}" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}"  Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource Schemes/Secondary}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
            <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource Schemes/Secondary}" BorderBrush="{StaticResource Schemes/Secondary}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
        <!-- DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="FontFamily" Value="Roboto" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Background" Value="#FDF7F0" />
            <Setter Property="HorizontalGridLinesBrush" Value="#D6CBBF" />
            <Setter Property="VerticalGridLinesBrush" Value="#D6CBBF" />
            <Setter Property="GridLinesVisibility" Value="All" />
            <Setter Property="RowBackground" Value="White" />
            <Setter Property="AlternatingRowBackground" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />


            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#FFFFFF" />
                        <Setter Property="Foreground" Value="#1F1B13" />
                        <Setter Property="FontWeight" Value="SemiBold" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="5" />
                        <Setter Property="BorderBrush" Value="#D0C5B4" />
                        <Setter Property="BorderThickness" Value="1" />
                </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="#1F1B13" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="8" />
                        <Setter Property="BorderBrush" Value="#D0C5B4" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border Background="Transparent" 
            BorderBrush="Transparent" 
            BorderThickness="1">
            <Path HorizontalAlignment="Center" 
              VerticalAlignment="Center" 
              Data="M 0 0 L 4 4 L 8 0 Z" 
              Fill="#1F1B13" />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" />
    </ControlTemplate>

    <!-- Combo Box -->
    <Style TargetType="ComboBox">
        <Setter Property="FontFamily" Value="Roboto" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#1F1B13" />
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="Padding" Value="4,8" />
        <Setter Property="BorderBrush" Value="#D0C5B4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ComboBox-Hintergrund und ToggleButton -->
                        <ToggleButton 
                        Name="ToggleButton"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!-- Inhalt der ComboBox -->
                                <ContentPresenter 
                                Name="ContentSite"
                                Content="{TemplateBinding SelectionBoxItem}" 
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Left" 
                                Margin="5,0,0,0" />
                                <!-- Pfeil-Symbol -->
                                <Path
                                Grid.Column="1"
                                Data="M 0 0 L 4 4 L 8 0 Z"
                                Fill="#1F1B13"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="5,0,10,0" />
                            </Grid>
                        </ToggleButton>
                        <!-- Dropdown -->
                        <Popup 
                        Name="PART_Popup" 
                        Placement="Bottom" 
                        PlacementTarget="{Binding ElementName=ToggleButton}" 
                        IsOpen="{TemplateBinding IsDropDownOpen}" 
                        AllowsTransparency="True" 
                        Focusable="False" 
                        PopupAnimation="Slide">
                            <Border 
                            Background="White" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{Binding ActualWidth, ElementName=ToggleButton}">
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="PART_Popup" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
